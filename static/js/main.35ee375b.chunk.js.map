{"version":3,"sources":["Components/Header.js","api.js","Components/Section.js","Components/Message.js","Components/Poster.js","Components/Loader.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js","assets/noPosterSmall.png"],"names":["Header","styled","header","List","ul","Item","li","props","current","Slink","Link","withRouter","pathname","location","to","api","axios","create","baseURL","params","api_key","language","moviesApi","get","id","append_to_response","term","query","tvApi","Container","div","Title","span","Grid","Section","title","children","Text","color","Message","text","proptypes","PropTypes","string","isRequired","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","require","default","role","aria-label","length","substring","useStyles","makeStyles","theme","root","height","display","alignItems","justifyContent","marginLeft","spacing","CircularIndeterminate","classes","className","CircularProgress","HomePresenter","nowPlaying","upcoming","popular","loading","error","Helmet","map","movie","poster_path","original_title","vote_average","release_date","HomeContainer","state","data","results","this","setState","React","Component","TVpresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","TVPresenter","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","ViewContainer","Vote","Logoimage","img","Divider","Overview","p","Season","Player","ReactPlayer","Word","Hr","hr","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","production_companies","company","production_countries","country","href","imdb_id","src","overview","credits","cast","c","profile_path","character","seasons","season","air_date","videos","video","url","key","controls","width","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","console","log","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35ee375b.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: grey;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  color: ${(props) => (props.current ? \"white\" : \"grey\")};\n  font-size: ${(props) => (props.current ? \"20px\" : \"transparent\")};\n  border-bottom: 3px solid\n    ${(props) => (props.current ? \"#ff3838\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst Slink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <Slink to=\"/\">Movies</Slink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <Slink to=\"/tv\">TV</Slink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <Slink to=\"/search\">Search</Slink>\n      </Item>\n    </List>\n  </Header>\n));\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"b8c5be227b841b11e829b19dc042ea65\",\n    language: \"ko\",\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos,credits\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: term,\n      },\n    }),\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos,credits\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: {\n        query: term,\n      },\n    }),\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: flex;\n  flex-wrap: nowrap;\n  overflow: auto;\n  &::-webkit-scrollbar {\n    height: 5px;\n  }\n  &::-webkit-scrollbar-thumb {\n    background-color: #b33939;\n    border-radius: 10px;\n    background-clip: padding-box;\n    border: 1px solid transparent;\n  }\n  &::-webkit-scrollbar-track {\n    background-color: #4b4b4b;\n    border-radius: 10px;\n  }\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <hr />\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  childeren: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${(props) => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.proptypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  margin: 10px;\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  width: 150px;\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.2s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/noPosterSmall.png\").default\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    \"& > * + *\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function CircularIndeterminate() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n      <CircularProgress color=\"secondary\" />\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport CircularIndeterminate from \"Components/Loader\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, loading, error }) => (\n  <>\n    <Helmet>\n      <title>Movie | Nepflix</title>\n    </Helmet>\n    {loading ? (\n      <CircularIndeterminate />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming\">\n            {upcoming.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular\">\n            {popular.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  popular: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default HomePresenter;\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import { moviesApi } from \"api\";\nimport React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming },\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movie information.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport CircularIndeterminate from \"Components/Loader\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVpresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    <Helmet>\n      <title>TV Shows | Nepflix</title>\n    </Helmet>\n    {loading ? (\n      <CircularIndeterminate />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Show\">\n            {topRated.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Show\">\n            {popular.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVpresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TVpresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import { tvApi } from \"api\";\nimport React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n      this.setState({\n        topRated,\n        popular,\n        airingToday,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find TV information.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport CircularIndeterminate from \"Components/Loader\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  loading,\n  handleSubmit,\n  updateTerm,\n  error,\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Nepflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <CircularIndeterminate />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Title\">\n            {movieResults.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Title\">\n            {tvResults.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {tvResults &&\n          movieResults &&\n          tvResults.length === 0 &&\n          movieResults.length === 0 && (\n            <Message text=\"Nothing Found\" color=\"#95a5a6\" />\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    loading: false,\n    error: null,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({ searchTerm: value });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({\n        movieResults,\n        tvResults,\n      });\n    } catch {\n      this.setState({ error: \"Can't find results.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        loading={loading}\n        error={error}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Message from \"Components/Message\";\nimport ReactPlayer from \"react-player\";\nimport CircularIndeterminate from \"Components/Loader\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 20px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n  display: flex;\n  align-items: center;\n`;\n\nconst ViewContainer = styled.div`\n  margin: 20px 0;\n  display: flex;\n  align-items: center;\n  white-space: nowrap;\n  overflow: auto;\n  &::-webkit-scrollbar {\n    height: 5px;\n  }\n  &::-webkit-scrollbar-thumb {\n    background-color: #b33939;\n    border-radius: 10px;\n    background-clip: padding-box;\n    border: 1px solid transparent;\n  }\n  &::-webkit-scrollbar-track {\n    background-color: ;\n    border-radius: 10px;\n  }\n`;\n\nconst Item = styled.span``;\n\nconst Vote = styled.span`\n  font-size: 18px;\n  font-weight: bold;\n`;\n\nconst Slink = styled.a``;\n\nconst Logoimage = styled.img`\n  width: 30px;\n  border: 1px solid white;\n`;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst Poster = styled.div`\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  border-radius: 10px;\n  border: 1px solid black;\n  margin: 5px;\n  height: 200px;\n  width: 150px;\n`;\n\nconst Season = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 30px;\n  align-items: center;\n`;\n\nconst Player = styled(ReactPlayer)`\n  margin: 20px;\n`;\n\nconst Section = styled.p`\n  margin-top: 30px;\n  font-weight: bold;\n  font-size: 20px;\n`;\n\nconst Word = styled.span`\n  opacity: 0.7;\n  line-height: 1.5;\n  margin-top: 5px;\n`;\n\nconst Hr = styled.hr`\n  margin: 10px 0px;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Nepflix</title>\n      </Helmet>\n      <CircularIndeterminate />\n    </>\n  ) : error ? (\n    <Message />\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Nepflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPosterSmall.png\").default\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Vote>\n              {result.vote_average\n                ? `⭐️ ${result.vote_average} / 10`\n                : `⭐️ 0 / 0`}\n            </Vote>\n          </ItemContainer>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.production_companies\n                ? result.production_companies.map((company, index) =>\n                    index === result.production_companies.length - 1\n                      ? `${company.name}`\n                      : `${company.name} / `\n                  )\n                : \"\"}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.production_countries\n                ? result.production_countries.map((country, index) =>\n                    index === result.production_countries.length - 1\n                      ? `${country.name}`\n                      : `${country.name} / `\n                  )\n                : \"\"}\n            </Item>\n            <Divider>•</Divider>\n            <Slink\n              href={`https://www.imdb.com/title/${result.imdb_id}`}\n              target={\"_blank\"}\n            >\n              <Logoimage\n                src={\n                  \"https://m.media-amazon.com/images/G/01/IMDb/BG_rectangle._CB1509060989_SY230_SX307_AL_.png\"\n                }\n              />\n            </Slink>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n          {result.credits.cast[0] ? <Section>•Cast</Section> : null}\n          {result.credits.cast[0] ? <Hr /> : null}\n          <ViewContainer>\n            {result.credits.cast\n              ? result.credits.cast.map((c) => (\n                  <Season key={c.id}>\n                    <Poster\n                      bgImage={`https://image.tmdb.org/t/p/w300${c.profile_path}`}\n                    />\n                    <Item>{c.name}</Item>\n                    <Word>{c.character}</Word>\n                  </Season>\n                ))\n              : null}\n          </ViewContainer>\n          {result.seasons ? <Section>•Season</Section> : null}\n          {result.seasons ? <Hr /> : null}\n          <ViewContainer>\n            {result.seasons\n              ? result.seasons.map((season) => (\n                  <Season key={season.id}>\n                    <Poster\n                      bgImage={`https://image.tmdb.org/t/p/w300${season.poster_path}`}\n                    />\n                    <Item>{season.name}</Item>\n                    <Word>{season.air_date}</Word>\n                  </Season>\n                ))\n              : null}\n          </ViewContainer>\n          {result.videos.results[0] ? <Section>•Video</Section> : null}\n          {result.videos.results[0] ? <Hr /> : null}\n          <ViewContainer>\n            {result.videos.results.map((video) => (\n              <div>\n                <Player\n                  url={`https://www.youtube.com/embed/${video.key}`}\n                  controls\n                  width={\"320px\"}\n                  height={\"240px\"}\n                />\n              </div>\n            ))}\n          </ViewContainer>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import { moviesApi, tvApi } from \"api\";\nimport React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\"),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    console.log(this.state);\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport Header from \"Components/Header\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n  <Router>\n    <Header />\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/tv\" component={TV} />\n      <Route path=\"/search\" component={Search} />\n      <Route path=\"/movie/:id\" component={Detail} />\n      <Route path=\"/show/:id\" component={Detail} />\n      <Redirect from=\"*\" to=\"/\" />\n    </Switch>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:12px;\n        background-color:rgba(20, 20, 20, 1);\n        color:white;\n        padding-top:50px;\n    }\n`;\n\nexport default globalStyles;\n","import { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","export default __webpack_public_path__ + \"static/media/noPosterSmall.60bfdb61.png\";"],"sourceRoot":""}